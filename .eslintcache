[{"/Users/leeseungmin/Desktop/project/src/index.js":"1","/Users/leeseungmin/Desktop/project/src/App/App.js":"2","/Users/leeseungmin/Desktop/project/src/fbase.js":"3","/Users/leeseungmin/Desktop/project/src/components/AppRouter.js":"4","/Users/leeseungmin/Desktop/project/src/routes/Home/Home.js":"5","/Users/leeseungmin/Desktop/project/src/components/Navigation/Navigation.js":"6","/Users/leeseungmin/Desktop/project/src/routes/Auth/SignUp.js":"7","/Users/leeseungmin/Desktop/project/src/routes/Auth/Login.js":"8","/Users/leeseungmin/Desktop/project/src/components/Navigation/SideBarData.js":"9","/Users/leeseungmin/Desktop/project/src/components/Calender/Calender.js":"10","/Users/leeseungmin/Desktop/project/src/components/SearchBox/SearchBox.js":"11","/Users/leeseungmin/Desktop/project/src/components/PlanList/PlanList.js":"12","/Users/leeseungmin/Desktop/project/src/routes/Profile/Profile.js":"13"},{"size":201,"mtime":1626679565047,"results":"14","hashOfConfig":"15"},{"size":695,"mtime":1626683216781,"results":"16","hashOfConfig":"15"},{"size":784,"mtime":1627137065708,"results":"17","hashOfConfig":"15"},{"size":1032,"mtime":1627122725858,"results":"18","hashOfConfig":"15"},{"size":3808,"mtime":1627115299812,"results":"19","hashOfConfig":"15"},{"size":1623,"mtime":1627111877079,"results":"20","hashOfConfig":"15"},{"size":4541,"mtime":1627278077744,"results":"21","hashOfConfig":"15"},{"size":2538,"mtime":1627110918402,"results":"22","hashOfConfig":"15"},{"size":610,"mtime":1627110254643,"results":"23","hashOfConfig":"15"},{"size":4037,"mtime":1627122008359,"results":"24","hashOfConfig":"15"},{"size":1011,"mtime":1627110982376,"results":"25","hashOfConfig":"15"},{"size":10211,"mtime":1627201915832,"results":"26","hashOfConfig":"15"},{"size":6648,"mtime":1627283690433,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"185t7fy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":2,"source":"63","usedDeprecatedRules":"30"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"66","usedDeprecatedRules":"30"},"/Users/leeseungmin/Desktop/project/src/index.js",[],["67","68","69"],"/Users/leeseungmin/Desktop/project/src/App/App.js",["70"],"import React, { useEffect, useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport AppRouter from \"../components/AppRouter.js\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : undefined}\n    </>\n  );\n}\n\nexport default App;\n","/Users/leeseungmin/Desktop/project/src/fbase.js",[],"/Users/leeseungmin/Desktop/project/src/components/AppRouter.js",["71"],"import React from \"react\";\nimport Login from \"../routes/Auth/Login\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./Navigation/Navigation\";\nimport Home from \"../routes/Home/Home\";\nimport SignUp from \"../routes/Auth/SignUp\";\nimport Profile from \"../routes/Profile/Profile\";\n// import Cart from \"../routes/Cart/Cart\";\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n            <Route exact path=\"/sign-up\">\n              <SignUp />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","/Users/leeseungmin/Desktop/project/src/routes/Home/Home.js",["72","73","74","75","76","77"],"import React, { useState } from \"react\";\nimport Calender from \"../../components/Calender/Calender\";\nimport \"./Home.css\";\nimport { useEffect } from \"react\";\nimport { dbService } from \"../../fbase\";\nimport PlanList from \"../../components/PlanList/PlanList\";\n\nconst Home = ({ userObj }) => {\n  let today = new Date();\n\n  const [year, setYear] = useState(today.getFullYear());\n  const [month, setMonth] = useState(today.getMonth() + 1);\n  const [clickDay, setClickDay] = useState();\n  const [isSideBar, setIsSideBar] = useState(false);\n\n  const [curUserName, setCurUserName] = useState(\"\");\n  const [usersName, setUsersName] = useState([]);\n  const [userGmail, setUserGmail] = useState(\"\");\n\n  const [planningDay, setPlanningDay] = useState([]);\n  const [planningDayDocId, setPlanningDayDocId] = useState(\"\");\n\n  const onSetCurUserNum = (event) => {\n    event.preventDefault();\n    const name = event.target.value;\n    setCurUserName(name);\n  };\n  const getUserListAndGmailFromFireStore = async () => {\n    if (userObj === null) {\n      return;\n    }\n    const docRef = dbService.doc(`${userObj.uid}/userInfo`);\n    docRef\n      .get()\n      .then(async (doc) => {\n        if (doc.exists) {\n          setUsersName([]);\n          let cur_obj = doc.data();\n          let userList = cur_obj[\"users\"];\n          setUserGmail(cur_obj[\"gmail\"]);\n          for (let i = 0; i < userList.length; i++) {\n            setUsersName((prev) => [...prev, userList[i]]);\n          }\n          setCurUserName(userList[0]);\n        } else {\n          console.log(\"No such document!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  const getPlanDayFromFireStore = async () => {\n    // var docDay;\n    // if (clickDay == undefined) {\n    //   docDay = today.getDate();\n    // } else {\n    //   docDay = clickDay;\n    // }\n    if (userGmail === undefined || curUserName === \"\") {\n      return;\n    }\n    await dbService\n      .collection(`${userGmail}`)\n      .doc(`${curUserName}`)\n      .collection(`${year}`)\n      .doc(`${month}`)\n      .collection(`planningDay`)\n      .onSnapshot((snapShot) => {\n        const planningDayArr = snapShot.docs.map((doc) => {\n          setPlanningDayDocId(doc.id);\n          return doc.data().day;\n        });\n        setPlanningDay(planningDayArr[0]);\n      });\n  };\n  useEffect(() => {\n    getUserListAndGmailFromFireStore();\n  }, [userObj]);\n\n  useEffect(() => {\n    if (!clickDay) {\n      setClickDay(today.getDate());\n    }\n    setPlanningDayDocId(\"\");\n    getPlanDayFromFireStore(curUserName);\n  }, [userObj, curUserName, year, month, clickDay]);\n\n  return (\n    <div className=\"home-screen\">\n      {userObj && (\n        <div className=\"home-screen-inner-border\">\n          <div className=\"home_wrapper\">\n            <div className=\"calender_img\">\n              <div className=\"calender_area\">\n                <Calender\n                  year={year}\n                  setYear={setYear}\n                  month={month}\n                  setMonth={setMonth}\n                  clickDay={clickDay}\n                  setClickDay={setClickDay}\n                  planningDay={planningDay}\n                  curUserName={curUserName}\n                />\n              </div>\n            </div>\n            <PlanList\n              userObj={userObj}\n              year={year}\n              month={month}\n              clickDay={clickDay}\n              planningDay={planningDay}\n              setPlanningDay={setPlanningDay}\n              curUserName={curUserName}\n              onSetCurUserNum={onSetCurUserNum}\n              userGmail={userGmail}\n              usersName={usersName}\n              planningDayDocId={planningDayDocId}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/leeseungmin/Desktop/project/src/components/Navigation/Navigation.js",["78","79","80","81"],"import React, { useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { SideBarData } from \"./SideBarData\";\nimport \"./Navigation.css\";\n\n/* 아이콘 컬러 전체 변경 기능 */\nimport { IconContext } from \"react-icons\";\nfunction Navigation() {\n  const [sidebar, setSidebar] = useState(false);\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      {/* 아이콘 컬러 전체 변경 기능 */}\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        {/* 네비게이션 토글 코드*/}\n        <div className=\"navbar\">\n          <div className=\"AppTitle\"></div>\n          <Link to=\"#\" className=\"menu-bars\">\n            <FaIcons.FaBars onClick={showSidebar} />\n          </Link>\n        </div>\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n          <ul className=\"nav-menu-items\" onClick={showSidebar}>\n            <li className=\"navbar-toggle\">\n              <Link to=\"#\" className=\"menu-bars\">\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            {SideBarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName} onClick={item.onClick}>\n                  <Link to={item.path}>\n                    <span className=\"nav_icon\">{item.icon}</span>\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\nexport default Navigation;\n","/Users/leeseungmin/Desktop/project/src/routes/Auth/SignUp.js",["82","83","84","85","86","87"],"import { authService } from \"../../fbase\";\nimport React, { useState } from \"react\";\nimport \"./SignUp.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { dbService } from \"../../fbase\";\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [gmail, setGmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [userNum, setUserNum] = useState(0);\n  const history = useHistory();\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    let users = [];\n    console.log(event.target);\n    console.log(email, password);\n    for (let i = 0; i < userNum; i++) {\n      const container = document.querySelector(`.userName${i}`);\n      users.push(container.value);\n    }\n    let userObj = {\n      email: email,\n      gmail: gmail,\n      userNum: userNum,\n      users: users,\n      lastConnectedIp: \"None\",\n    };\n    authService\n      .createUserWithEmailAndPassword(email, password)\n      .then(async (userCredential) => {\n        let user = userCredential.user;\n        console.log(user.uid);\n        await dbService.doc(`${user.uid}/userInfo`).set(userObj);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        setError(err.message);\n        console.log(err.message);\n      });\n  };\n  const onSetUserNum = (event) => {\n    event.preventDefault();\n    const num = parseInt(event.target.value);\n    setUserNum(num);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    } else {\n      setGmail(value);\n    }\n  };\n\n  const usersFormRendering = () => {\n    const result = [];\n    for (let i = 0; i < userNum; i++) {\n      result.push(\n        <div className=\"form-group\" key={i}>\n          <label>User{i + 1} : </label>\n          <input\n            type=\"text\"\n            name={i}\n            className={\"form-control \" + \"userName\" + i}\n            placeholder=\"Enter user name\"\n          />\n        </div>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"auth_screen\">\n      <div className=\"auth_wrapper\">\n        {/* <div className=\"AppTitle AuthTitle\"></div> */}\n        <div className=\"auth_inner\">\n          <form onSubmit={onSubmit}>\n            <h3 className=\"page-title\">Sign Up</h3>\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={onChange}\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Google ID connected to Google Assistant </label>\n              <input\n                type=\"email\"\n                name=\"gmail\"\n                value={gmail}\n                onChange={onChange}\n                className=\"form-control\"\n                placeholder=\"Enter Gmail\"\n              />\n            </div>\n\n            {userNum !== 0 ? (\n              <>{usersFormRendering()}</>\n            ) : (\n              <div className=\"form-group\">\n                <label>Users</label>\n                <div className=\"users_num\">\n                  How many user use this account\n                  <select\n                    className=\"user_num_select\"\n                    name=\"users\"\n                    onChange={onSetUserNum}\n                  >\n                    <option value=\"0\">Click</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                  </select>\n                </div>\n              </div>\n            )}\n            {error && <span className=\"error-code\">{error}</span>}\n            <button type=\"submit\" className=\"btn-primary btn-block\">\n              Submit\n            </button>\n            <p className=\"sign-up_link text-right\">\n              Already have an account? <Link to=\"/\">Sign In</Link>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/Users/leeseungmin/Desktop/project/src/routes/Auth/Login.js",["88","89","90","91"],"import { authService } from \"../../fbase\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await authService\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((err) => {\n        setError(err.message);\n        console.log(err.message);\n      });\n  };\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n  return (\n    <div className=\"auth_screen\">\n      <div className=\"auth_wrapper\">\n        <div className=\"auth_inner\">\n          <form onSubmit={onSubmit}>\n            <h3 className=\"page-title\">Sign In</h3>\n            <div className=\"form-group\">\n              <label>Email address</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={onChange}\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"customCheck1\"\n                />\n                <label className=\"control-label\" htmlFor=\"customCheck1\">\n                  Remember me\n                </label>\n              </div>\n            </div>\n            {error && <span className=\"error-code\">{error}</span>}\n            <button type=\"submit\" className=\"btn-primary btn-block\">\n              Submit\n            </button>\n            <p className=\"sign-up_link text-right\">\n              Dont have an account? <Link to=\"/sign-up\">Sign Up</Link>\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/leeseungmin/Desktop/project/src/components/Navigation/SideBarData.js",["92"],"import React from \"react\";\nimport * as BsIcons from \"react-icons/bs\";\nimport * as FsIcons from \"react-icons/fa\";\nimport { authService } from \"../../fbase\";\n\nconst onLogout = async () => {\n  await authService.signOut();\n};\nexport const SideBarData = [\n  {\n    title: \"Profile\",\n    path: \"/profile\",\n    icon: <BsIcons.BsPersonBoundingBox />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Home\",\n    path: \"/\",\n    icon: <BsIcons.BsFillHouseDoorFill />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Log Out\",\n    path: \"/\",\n    icon: <FsIcons.FaSignOutAlt />,\n    cName: \"nav-text\",\n    onClick: onLogout,\n  },\n];\n","/Users/leeseungmin/Desktop/project/src/components/Calender/Calender.js",["93","94","95","96","97","98","99","100","101","102"],"import React, { useState, useEffect } from \"react\";\nimport \"./Calender.css\";\nimport * as FsIcons from \"react-icons/fa\";\nconst Calender = ({\n  year,\n  setYear,\n  month,\n  setMonth,\n  clickDay,\n  setClickDay,\n  planningDay,\n  curUserName,\n}) => {\n  let today = new Date();\n\n  const [cal, setCal] = useState([]);\n\n  const [toggleCalChange, setToggleCalCahnge] = useState(true);\n\n  const calDic = {\n    1: 31,\n    2: 28,\n    3: 31,\n    4: 30,\n    5: 31,\n    6: 30,\n    7: 31,\n    8: 31,\n    9: 30,\n    10: 31,\n    11: 30,\n    12: 31,\n  };\n  const weekDic = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n  const weekDic2 = [\n    \"SUNDAY\",\n    \"MONDAY\",\n    \"TUESDAY\",\n    \"WEDNESDAY\",\n    \"THURSDAY\",\n    \"FRIDAY\",\n    \"SATDAY\",\n  ];\n\n  const leftHandleWeek = () => {\n    if (month === 1) {\n      setMonth((prev) => 13 - prev);\n      setYear((prev) => prev - 1);\n    } else {\n      setMonth((prev) => prev - 1);\n    }\n  };\n  const rightHandleWeek = () => {\n    if (month === 12) {\n      setMonth((prev) => 13 - prev);\n      setYear((prev) => prev + 1);\n    } else {\n      setMonth((prev) => prev + 1);\n    }\n  };\n  const getFirstDayIndex = () => {\n    let fistDayIndex = new Date(`${year}-${month}-01`).getDay();\n    return fistDayIndex;\n  };\n  const makeCalendar = () => {\n    setClickDay();\n    setCal([]);\n    let arr = [];\n    let fistDayIndex = getFirstDayIndex();\n    let day = 1;\n    for (let i = 0, cnt = 1; i < 7; i++) {\n      if (i < fistDayIndex) {\n        arr.push(\".\");\n      } else {\n        arr.push(`${cnt}`);\n        cnt += 1;\n        day = cnt;\n      }\n    }\n    let m = calDic[month];\n    for (let i = day; i <= m; i++) {\n      arr.push(i);\n    }\n    setCal((prev) => [...prev, ...arr]);\n    setToggleCalCahnge((prev) => !prev);\n  };\n  const getWeekDic2 = (d) => {\n    return weekDic2[d];\n  };\n\n  const dayOnClick = (e) => {\n    let parsedInt_clickDay = parseInt(e.target.innerText);\n    const className = e.target.className;\n    const arr = className.split(\" \");\n    for (var i in arr) {\n      // dot 클릭시 sidebar 실행 x\n      if (arr[i] === \"dot\") {\n        return;\n      }\n    }\n    setClickDay(parsedInt_clickDay);\n    console.log(year, month, parsedInt_clickDay);\n  };\n\n  useEffect(() => {\n    makeCalendar();\n    return () => {};\n  }, [year, month]);\n\n  return (\n    <>\n      <div className=\"calender\">\n        <div id=\"container\">\n          <div className=\"year-month-container\">\n            <div className=\"year-month-container-inner\">\n              <div id=\"year\">{year}</div>\n              <span id=\"bar\">/ </span>\n              <div id=\"month\"> {month}</div>\n            </div>\n            <div className=\"control-btn\">\n              <div className=\"each_btn\" onClick={leftHandleWeek}>\n                <FsIcons.FaChevronLeft />\n              </div>\n              <div className=\"each_btn\" onClick={rightHandleWeek}>\n                <FsIcons.FaChevronRight />\n              </div>\n            </div>\n          </div>\n          <div id=\"weekDic\">\n            {weekDic.map((dic, index) => {\n              return (\n                <div className=\"dic\" id={dic} key={index}>\n                  {dic}\n                </div>\n              );\n            })}\n          </div>\n          <div id=\"calenda\">\n            {cal.map((day, index) => {\n              return (\n                <div\n                  id={day}\n                  className={\n                    \"day\" +\n                    (day === today.getDate() && month === today.getMonth() + 1\n                      ? \" today\"\n                      : \"\") +\n                    (day !== \".\" ? ` day-num` : \" dot\") +\n                    (planningDay === undefined ||\n                    planningDay.indexOf(day) === -1\n                      ? \"\"\n                      : \" plan\")\n                  }\n                  key={index}\n                  onClick={dayOnClick}\n                >\n                  {day}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Calender;\n","/Users/leeseungmin/Desktop/project/src/components/SearchBox/SearchBox.js",["103"],"import React, { useCallback, useRef, useEffect } from \"react\";\nconst SearchBox = ({ mapApi,  setState }) => {\n  const input = useRef(null);\n  const searchBox = useRef(null);\n\n  const handleOnPlacesChanged = useCallback(() => {\n    const places = searchBox.current.getPlaces();\n    if (places) {\n      let targetObj = {\n        name: places[0].name,\n        lat: places[0].geometry.location.lat(),\n        lng: places[0].geometry.location.lng(),\n      };\n      setState(targetObj);\n    }\n  }, [searchBox,setState]);\n\n  useEffect(() => {\n    if (!searchBox.current && mapApi) {\n      searchBox.current = new mapApi.places.SearchBox(input.current);\n      searchBox.current.addListener(\"places_changed\", handleOnPlacesChanged);\n    }\n\n    return () => {\n      if (mapApi) {\n        searchBox.current = null;\n        mapApi.event.clearInstanceListeners(searchBox);\n      }\n    };\n  }, [mapApi, handleOnPlacesChanged]);\n\n  return <input ref={input} placeholder=\"Search..\" type=\"text\" />;\n};\nexport default SearchBox;\n",["104","105","106"],"/Users/leeseungmin/Desktop/project/src/components/PlanList/PlanList.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../../fbase\";\nimport * as FaIcons from \"react-icons/fa\";\nimport SearchBox from \"../SearchBox/SearchBox\";\nimport GoogleMap from \"google-map-react\";\nimport \"./PlanList.css\";\nconst PlanList = ({\n  userObj,\n  year,\n  month,\n  clickDay,\n  planningDay,\n  setPlanningDay,\n  curUserName,\n  onSetCurUserNum,\n  userGmail,\n  usersName,\n  planningDayDocId,\n}) => {\n  let today = new Date();\n\n  const [isActiveAddInput, setIsActiveAddInput] = useState(false);\n  const [isActiveDeleteCheckBox, setIsActiveDeleteCheckBox] = useState(false);\n  const [ori, setOri] = useState({});\n  const [dest, setDest] = useState({});\n  const [userTodoList, setUserTodoList] = useState([]);\n  //GOOGLE API\n  const [apiReady, setApiReady] = useState(false);\n  const [map, setMap] = useState(null);\n  const [googlemaps, setGooglemaps] = useState(null);\n  const [center, setCenter] = useState({ lat: 37.5, lng: 127 });\n  let zoom = 10;\n\n  if (window.screen.width >= 768) {\n    zoom = 15;\n  }\n  const handleApiLoaded = (map, maps) => {\n    if (map && maps) {\n      setApiReady(true);\n      setMap(map);\n      setGooglemaps(maps);\n    }\n  };\n  //GOOGLE API\n  const getToDoListFromFireStore = async (curUserName) => {\n    \n    if (userGmail === undefined || curUserName === \"\") {\n      return;\n    }\n    await dbService\n      .collection(`${userGmail}`)\n      .doc(`${curUserName}`)\n      .collection(`${year}`)\n      .doc(`${month}`)\n      .collection(`${clickDay}`)\n      .onSnapshot((snapShot) => {\n        const docDataList = snapShot.docs.map((doc) => {\n          let docObj = {\n            what: doc.data().what,\n            time: doc.data().time,\n            ori: doc.data().ori.name,\n            dest: doc.data().dest.name,\n            item: doc.data().item,\n          };\n          return {\n            id: doc.id,\n            ...docObj,\n          };\n        });\n        setUserTodoList(docDataList);\n      });\n  };\n  useEffect(() => {\n    setIsActiveAddInput(false);\n    setIsActiveDeleteCheckBox(false);\n    getToDoListFromFireStore(curUserName);\n  }, [userObj, curUserName, year, month, clickDay]);\n\n  useEffect(() => {}, [apiReady, googlemaps]);\n\n  const toggleDeleteListOnClick = () => {\n    setIsActiveDeleteCheckBox((prev) => !prev);\n  };\n  const deleteListOnClick = async () => {\n    const deleteListBox = document.getElementsByClassName(\"deleteCheckBox\");\n    let deleteListIndex = [];\n    for (let i = 0; i < deleteListBox.length; i++) {\n      if (deleteListBox[i].checked === true) {\n        deleteListIndex.push(i);\n      }\n    }\n    if (deleteListIndex.length === 0) {\n      setIsActiveDeleteCheckBox(false);\n      return;\n    }\n    if (deleteListBox.length === deleteListIndex.length) {\n      setPlanningDay((prev) => prev.filter((x) => x !== clickDay));\n      let newPlanningDay = planningDay.filter((x) => x !== clickDay);\n      await dbService\n        .collection(`${userGmail}`)\n        .doc(`${curUserName}`)\n        .collection(`${year}`)\n        .doc(`${month}`)\n        .collection(`planningDay`)\n        .doc(`${planningDayDocId}`)\n        .update({ day: newPlanningDay });\n    }\n    setIsActiveDeleteCheckBox(false);\n    for (let i = 0; i < deleteListIndex.length; i++) {\n      const docId = userTodoList[deleteListIndex[i]].id;\n      await dbService\n        .collection(`${userGmail}`)\n        .doc(`${curUserName}`)\n        .collection(`${year}`)\n        .doc(`${month}`)\n        .collection(`${clickDay}`)\n        .doc(`${docId}`)\n        .delete();\n    }\n  };\n  const addListOnClick = () => {\n    setIsActiveAddInput((prev) => !prev);\n  };\n  const onCancleIsActiveAddInput = () => {\n    setIsActiveAddInput(false);\n  };\n  const onSubmitNewListInput = async () => {\n    setIsActiveAddInput(false);\n\n    const whatContainer = document.querySelector(`.what`);\n    const timeContainer = document.querySelector(`.time`);\n    const itemContainer = document.querySelector(`.item`);\n    if (\n      whatContainer.value === \"\" ||\n      timeContainer.value === \"\" ||\n      ori === undefined ||\n      dest === undefined ||\n      itemContainer.value === \"\"\n    ) {\n      return;\n    }\n    let targetObj = {\n      what: whatContainer.value,\n      time: timeContainer.value,\n      ori: ori,\n      dest: dest,\n      item: itemContainer.value,\n    };\n\n    await dbService\n      .collection(`${userGmail}`)\n      .doc(`${curUserName}`)\n      .collection(`${year}`)\n      .doc(`${month}`)\n      .collection(`${clickDay}`)\n      .add(targetObj)\n      .then(() => {\n        console.log(\"Document successfully written!\");\n      })\n      .catch((error) => {\n        console.error(\"Error writing document: \", error);\n      });\n\n    let isDocDayInPlan = false;\n    if (planningDay) {\n      for (let i = 0; i < planningDay.length; i++) {\n        if (planningDay[i] === clickDay) {\n          isDocDayInPlan = true;\n          break;\n        }\n      }\n    }\n    if (!isDocDayInPlan) {\n      let collectionRef = dbService.collection(\n        `${userGmail}/${curUserName}/${year}/${month}/planningDay`\n      );\n      if (planningDayDocId) {\n        let newPlanningDay = [...planningDay, clickDay];\n        let setObj = { day: newPlanningDay };\n        await collectionRef.doc(`${planningDayDocId}`).set(setObj);\n      } else {\n        let setObj = { day: [clickDay] };\n        await collectionRef.add(setObj);\n      }\n    }\n  };\n\n  return (\n    <div className=\"user-plan\">\n      <div className=\"googleMap\">\n        <GoogleMap\n          bootstrapURLKeys={{\n            key: \"AIzaSyBYrQ0_gCCY05C7LD6X_0KCI-1cwsAzm6U\",\n            libraries: \"places\",\n          }}\n          defaultCenter={center}\n          defaultZoom={zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\n        ></GoogleMap>\n      </div>\n      <div className=\"user-name-input-area\">\n        <span>User Name : </span>\n        {userObj ? (\n          <select\n            className=\"user_name_select\"\n            name=\"users\"\n            onChange={onSetCurUserNum}\n          >\n            (\n            {usersName.map((name, index) => {\n              return (\n                <option key={index} value={name}>\n                  {name}\n                </option>\n              );\n            })}\n            )\n          </select>\n        ) : undefined}\n      </div>\n      <div className=\"plan-list\">\n        <span className=\"plan-list-title\">\n          {curUserName}'s {month}/{clickDay} plans\n        </span>\n        <div className=\"plan-list_inner\">\n          <div className=\"list-area\">\n            <table className=\"add-table\">\n              <thead>\n                <tr>\n                  <th>What</th>\n                  <th>Time</th>\n                  <th>Ori</th>\n                  <th>Dest</th>\n                  <th>Item</th>\n                </tr>\n              </thead>\n              <tbody>\n                {userTodoList.map((list, index) => {\n                  return (\n                    <tr key={index}>\n                      <td\n                        className={\n                          isActiveDeleteCheckBox ? \"padding-left-6\" : undefined\n                        }\n                      >\n                        {isActiveDeleteCheckBox ? (\n                          <input\n                            className=\"deleteCheckBox\"\n                            type=\"checkbox\"\n                            name=\"wantToDelete\"\n                          />\n                        ) : undefined}\n                        {list.what}\n                      </td>\n                      <td>{list.time}</td>\n                      <td>{list.ori}</td>\n                      <td>{list.dest}</td>\n                      <td>{list.item}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {isActiveAddInput ? (\n          <div className=\"table-area add-input\">\n            <table className=\"add-table\">\n              <thead>\n                <tr>\n                  <th>What</th>\n                  <th>Time</th>\n                  <th>Ori</th>\n                  <th>Dest</th>\n                  <th>Item</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <input className=\"what\" type=\"text\" placeholder=\"Enter..\" />\n                  </td>\n                  <td>\n                    <input className=\"time\" type=\"time\" />\n                  </td>\n                  <td>\n                    {apiReady && googlemaps && (\n                      <SearchBox mapApi={googlemaps} setState={setOri} />\n                    )}\n                  </td>\n                  <td>\n                    {apiReady && googlemaps && (\n                      <SearchBox mapApi={googlemaps} setState={setDest} />\n                    )}\n                  </td>\n                  <td>\n                    <input className=\"item\" type=\"text\" placeholder=\"Enter..\" />\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"cancle-add-input-btn-area\">\n              <FaIcons.FaMinusSquare\n                className=\"cancle-add-input-btn\"\n                onClick={onCancleIsActiveAddInput}\n              />\n            </div>\n            <div className=\"submit-input-btn-area\">\n              <FaIcons.FaPlusSquare\n                className=\"submit-input-btn\"\n                onClick={onSubmitNewListInput}\n              />\n            </div>\n          </div>\n        ) : undefined}\n        {/* <div className=\"addListInput\"></div> */}\n        <div className=\"list-control-area\">\n          <div className=\"add-list-btn list-btn\">\n            <FaIcons.FaCalendarPlus onClick={addListOnClick} />\n          </div>\n          <div className=\"delte-list-btn list-btn\">\n            <FaIcons.FaCalendarMinus onClick={toggleDeleteListOnClick} />\n          </div>\n          {isActiveDeleteCheckBox && (\n            <div className=\"move-to-trash list-btn\">\n              <FaIcons.FaTrash onClick={deleteListOnClick} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PlanList;\n","/Users/leeseungmin/Desktop/project/src/routes/Profile/Profile.js",["124","125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../../fbase\";\nimport * as FaIcons from \"react-icons/fa\";\nimport \"./Profile.css\";\nimport axios from \"axios\";\n\nconst Profile = ({ userObj }) => {\n  const [usersName, setUsersName] = useState([]);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userGmail, setUserGmail] = useState(\"\");\n  const [userInfoChange, setUserInfoChange] = useState(false);\n  const [currentIp, setCurrentIp] = useState(\"\");\n  const [lastConnectedIp, setLastConnectedIp] = useState(\"\");\n\n  const getUserInfoFromFireStore = async () => {\n    if (userObj === null) {\n      return;\n    }\n    const docRef = dbService.doc(`${userObj.uid}/userInfo`);\n\n    docRef\n      .get()\n      .then(async (doc) => {\n        if (doc.exists) {\n          setUsersName([]);\n          let cur_obj = doc.data();\n          let userList = cur_obj[\"users\"];\n          setUserGmail(cur_obj[\"gmail\"]);\n          setUserEmail(cur_obj[\"email\"]);\n          setLastConnectedIp(cur_obj[\"lastConnectedIp\"]);\n          for (let i = 0; i < userList.length; i++) {\n            setUsersName((prev) => [...prev, userList[i]]);\n          }\n        } else {\n          console.log(\"No such document!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  const getIP = async () => {\n    axios\n      .get(`https://ipinfo.io/json?token=72c34bedaa885f`)\n      .then((response) => {\n        setCurrentIp(response.data.ip);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  useEffect(() => {\n    getUserInfoFromFireStore();\n    getIP();\n  }, [userObj, userInfoChange]);\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"currentIp\") {\n      setCurrentIp(value);\n    }\n  };\n  const onClick = async () => {\n    setUserInfoChange((prev) => !prev);\n  };\n\n  const onClickSynchronize = async () => {\n    const snapshot = await dbService.collection(\"ip_info\").get();\n    let isFirstConnection = true;\n    let userDocId;\n    snapshot.docs.map(async (doc) => {\n      let userIpData = doc.data();\n      if (userIpData.ip === lastConnectedIp) {\n        userDocId = doc.id;\n        isFirstConnection = false;\n        await dbService.doc(`ip_info/${userDocId}`).update({ ip: currentIp });\n      }\n    });\n\n    if (isFirstConnection) {\n      let targetObj = {\n        ip: currentIp,\n        gmail: userGmail,\n        userEmail: userEmail,\n        usersName: usersName,\n      };\n      await dbService.collection(\"ip_info\").add(targetObj);\n    }\n    await dbService\n      .doc(`${userObj.uid}/userInfo`)\n      .update({ lastConnectedIp: currentIp });\n\n    setUserInfoChange((prev) => !prev);\n  };\n  return (\n    <div className=\"profile-screen\">\n      Profile\n      <div className=\"profile-screen-top-background\"></div>\n      <div className=\"profile-screen-bottom-background\"></div>\n      <div className=\"profile-wrapper\">\n        <div className=\"profile-inner-container\">\n          <div className=\"profile-title-area\">\n            <div>\n              <FaIcons.FaUserAlt className=\"profile-title-icon\" />\n              <span className=\"profile-title\">My Account</span>\n            </div>\n            <input\n              type=\"button\"\n              className=\"profile-title-setting\"\n              value=\"UPDATE\"\n              onClick={onClick}\n            />\n          </div>\n          <div className=\"profile-subtitile-area\">\n            <div className=\"profile-subtitile\">USER INFORMATION</div>\n            <div className=\"user-profile-img\"></div>\n            <span className=\"error-code profile-warning\">\n              If you really want to change user Info. conatct us XXX-XXXX{\" \"}\n            </span>\n          </div>\n          <div className=\"profile-user-info-area\">\n            <div className=\"user-info-row\">\n              <div className=\"row-left row-side\">\n                <div className=\"row-left-label profile-row-label\">\n                  Email address\n                </div>\n                <input\n                  className=\"row-left-input profile-email\"\n                  value={userEmail}\n                  readOnly\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"row-right row-side\">\n                <div className=\"row-right-label profile-row-label\">\n                  User Gmail\n                </div>\n                <input\n                  className=\"row-right-input profile-gmail\"\n                  value={userGmail}\n                  readOnly\n                  type=\"text\"\n                />\n              </div>\n            </div>\n\n            <div className=\"user-info-row\">\n              {usersName.map((name, index) => {\n                return (\n                  <div className=\"row-side\" key={index}>\n                    <div className=\"profile-row-label\">\n                      User{index + 1} Name\n                    </div>\n                    <input\n                      className=\"row-left-input\"\n                      value={usersName[index]}\n                      readOnly\n                      type=\"text\"\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"profile-subtitile ip-area\">\n            <span>My IP History</span>{\" \"}\n            <input\n              type=\"button\"\n              className=\"ip-synchronize-btn\"\n              value=\"synchronize\"\n              onClick={onClickSynchronize}\n            />\n          </div>\n          <div className=\"profile-user-info-area\">\n            <div className=\"user-info-row\">\n              <div className=\"row-left row-side\">\n                <div className=\"row-left-label profile-row-label ip-row\">\n                  <span> Current IP</span>\n                </div>\n                <input\n                  className=\"row-right-input profile-gmail currentIp\"\n                  name=\"currentIp\"\n                  value={currentIp}\n                  onChange={onChange}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"row-right row-side\">\n                <div className=\"row-right-label profile-row-label\">\n                  <span>Connected IP with Gmail</span>\n                </div>\n                <input\n                  className=\"row-right-input profile-gmail\"\n                  value={lastConnectedIp}\n                  readOnly\n                  type=\"text\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"142","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":14,"column":21,"nodeType":"140","messageId":"141","endLine":14,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":80,"column":6,"nodeType":"146","endLine":80,"endColumn":15,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":88,"column":6,"nodeType":"146","endLine":88,"endColumn":51,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":117,"column":15,"nodeType":"152","endLine":117,"endColumn":48},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":20,"column":11,"nodeType":"155","endLine":20,"endColumn":37,"fix":"156"},{"ruleId":"150","severity":1,"message":"151","line":22,"column":29,"nodeType":"152","endLine":22,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":26,"column":42,"nodeType":"152","endLine":26,"endColumn":63},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":84,"column":17,"nodeType":"152","endLine":84,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":92,"column":17,"nodeType":"152","endLine":92,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":104,"column":17,"nodeType":"152","endLine":104,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":115,"column":17,"nodeType":"152","endLine":115,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":131,"column":21,"nodeType":"152","endLine":131,"endColumn":44},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"151","line":37,"column":17,"nodeType":"152","endLine":37,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":45,"column":17,"nodeType":"152","endLine":45,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":57,"column":17,"nodeType":"152","endLine":57,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"157","line":9,"column":3,"nodeType":"140","messageId":"141","endLine":9,"endColumn":11},{"ruleId":"138","severity":1,"message":"158","line":12,"column":3,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"159","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":25},{"ruleId":"138","severity":1,"message":"160","line":87,"column":9,"nodeType":"140","messageId":"141","endLine":87,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":95,"column":10,"nodeType":"163","messageId":"164","endLine":95,"endColumn":15,"fix":"165"},{"ruleId":"144","severity":1,"message":"166","line":108,"column":6,"nodeType":"146","endLine":108,"endColumn":19,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"151","line":121,"column":41,"nodeType":"152","endLine":121,"endColumn":65},{"ruleId":"150","severity":1,"message":"151","line":124,"column":41,"nodeType":"152","endLine":124,"endColumn":66},{"ruleId":"150","severity":1,"message":"151","line":155,"column":19,"nodeType":"152","endLine":155,"endColumn":39},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"132","replacedBy":"168"},{"ruleId":"134","replacedBy":"169"},{"ruleId":"136","replacedBy":"170"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"171","line":20,"column":7,"nodeType":"140","messageId":"141","endLine":20,"endColumn":12},{"ruleId":"138","severity":1,"message":"172","line":29,"column":10,"nodeType":"140","messageId":"141","endLine":29,"endColumn":13},{"ruleId":"138","severity":1,"message":"173","line":31,"column":18,"nodeType":"140","messageId":"141","endLine":31,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":37,"column":28,"nodeType":"140","messageId":"176","endLine":37,"endColumn":31},{"ruleId":"174","severity":1,"message":"177","line":45,"column":43,"nodeType":"140","messageId":"176","endLine":45,"endColumn":54},{"ruleId":"178","severity":1,"message":"179","line":46,"column":1,"nodeType":"180","messageId":"181","endLine":46,"endColumn":5,"fix":"182"},{"ruleId":"144","severity":1,"message":"183","line":77,"column":6,"nodeType":"146","endLine":77,"endColumn":51,"suggestions":"184"},{"ruleId":"153","severity":1,"message":"154","line":191,"column":9,"nodeType":"155","endLine":200,"endColumn":10,"fix":"185"},{"ruleId":"150","severity":1,"message":"151","line":199,"column":11,"nodeType":"152","endLine":199,"endColumn":76},{"ruleId":"174","severity":1,"message":"175","line":199,"column":33,"nodeType":"140","messageId":"176","endLine":199,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":224,"column":24,"nodeType":"188"},{"ruleId":"150","severity":1,"message":"151","line":306,"column":17,"nodeType":"152","endLine":306,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":312,"column":17,"nodeType":"152","endLine":312,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":320,"column":37,"nodeType":"152","endLine":320,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":323,"column":38,"nodeType":"152","endLine":323,"endColumn":71},{"ruleId":"150","severity":1,"message":"151","line":327,"column":32,"nodeType":"152","endLine":327,"endColumn":59},{"ruleId":"138","severity":1,"message":"139","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"189","line":56,"column":6,"nodeType":"146","endLine":56,"endColumn":31,"suggestions":"190"},{"ruleId":"153","severity":1,"message":"154","line":100,"column":7,"nodeType":"155","endLine":100,"endColumn":54,"fix":"191"},{"ruleId":"153","severity":1,"message":"154","line":101,"column":7,"nodeType":"155","endLine":101,"endColumn":57,"fix":"192"},{"ruleId":"150","severity":1,"message":"151","line":113,"column":15,"nodeType":"152","endLine":113,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":118,"column":13,"nodeType":"155","endLine":118,"endColumn":47,"fix":"193"},{"ruleId":"150","severity":1,"message":"151","line":173,"column":15,"nodeType":"152","endLine":173,"endColumn":43},{"ruleId":"150","severity":1,"message":"151","line":186,"column":19,"nodeType":"152","endLine":186,"endColumn":38},"no-catch-shadow",["174"],"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'isSideBar' is assigned a value but never used.","'setIsSideBar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserListAndGmailFromFireStore'. Either include it or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has missing dependencies: 'getPlanDayFromFireStore' and 'today'. Either include them or remove the dependency array.",["197"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement",{"range":"198","text":"199"},"'clickDay' is defined but never used.","'curUserName' is defined but never used.","'toggleCalChange' is assigned a value but never used.","'getWeekDic2' is assigned a value but never used.","no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"200","text":"201"},"React Hook useEffect has a missing dependency: 'makeCalendar'. Either include it or remove the dependency array.",["202"],["174"],["194"],["195"],"'today' is assigned a value but never used.","'map' is assigned a value but never used.","'setCenter' is assigned a value but never used.","no-shadow","'map' is already declared in the upper scope.","noShadow","'curUserName' is already declared in the upper scope.","no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"203","text":"204"},"React Hook useEffect has a missing dependency: 'getToDoListFromFireStore'. Either include it or remove the dependency array.",["205"],{"range":"206","text":"199"},"react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","Literal","React Hook useEffect has a missing dependency: 'getUserInfoFromFireStore'. Either include it or remove the dependency array.",["207"],{"range":"208","text":"199"},{"range":"209","text":"199"},{"range":"210","text":"199"},"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},[628,635]," />",[1992,1995],"let",{"desc":"215","fix":"216"},[1260,1264],"",{"desc":"217","fix":"218"},[5800,5813],{"desc":"219","fix":"220"},[2855,2862],[2918,2925],[3585,3592],"Update the dependencies array to be: [getUserListAndGmailFromFireStore, userObj]",{"range":"221","text":"222"},"Update the dependencies array to be: [userObj, curUserName, year, month, clickDay, getPlanDayFromFireStore, today]",{"range":"223","text":"224"},"Update the dependencies array to be: [year, month, makeCalendar]",{"range":"225","text":"226"},"Update the dependencies array to be: [userObj, curUserName, year, month, clickDay, getToDoListFromFireStore]",{"range":"227","text":"228"},"Update the dependencies array to be: [userObj, userInfoChange, getUserInfoFromFireStore]",{"range":"229","text":"230"},[2415,2424],"[getUserListAndGmailFromFireStore, userObj]",[2587,2632],"[userObj, curUserName, year, month, clickDay, getPlanDayFromFireStore, today]",[2257,2270],"[year, month, makeCalendar]",[2104,2149],"[userObj, curUserName, year, month, clickDay, getToDoListFromFireStore]",[1645,1670],"[userObj, userInfoChange, getUserInfoFromFireStore]"]